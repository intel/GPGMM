name: Windows x64 GN/Clang (Release)

on:
  # This is a required workflow specified in branch enforcement
  # and must run unconditionally to allow merges.
  push:
  pull_request:

jobs:

  win_clang_rel_x64:

    runs-on: windows-2019

    steps:
    - name: Git config
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: Install depot_tools
      shell: cmd
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git ..\depot_tools
        set "PATH=%CD%\..\depot_tools;%PATH%"
        gclient

    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'




    - uses: actions/checkout@v2
      with:
        path: test
        fetch-depth: 0

    - name: Sync code for main branch (with patch)
      shell: cmd
      run: |
        set "PATH=%CD%\..\depot_tools;%PATH%"
        set "DEPOT_TOOLS_WIN_TOOLCHAIN=0"
        cd test
        copy scripts\standalone.gclient .gclient
        gclient sync


    - name: Generate fuzzer for main branch (with patch)
      shell: cmd
      run: |
        set "PATH=%CD%\..\depot_tools;%PATH%"
        set "DEPOT_TOOLS_WIN_TOOLCHAIN=0"
        cd test
        gn gen out\Fuzzer --args="is_debug=false gpgmm_use_fuzzing_engine=true use_libfuzzer=true is_asan=true gpgmm_enable_assert_on_warning=true gpgmm_enable_device_leak_checks=true"

    - name: Build fuzzer for main branch (with patch)
      shell: cmd
      run: |
        set "PATH=%CD%\..\depot_tools;%PATH%"
        set "DEPOT_TOOLS_WIN_TOOLCHAIN=0"
        cd test
        ninja -C out\Fuzzer

    - name: Run gpgmm_d3d12_resource_allocator_fuzzer (with patch)
      shell: cmd
      run: |
        cd test
        out\Fuzzer\gpgmm_d3d12_resource_allocator_fuzzer.exe -max_total_time=120

    - uses: actions/upload-artifact@v3
      with:
        name: fuzzer-test-reproducer
        path: test/(crash|oom|leak|timeout)-.*
