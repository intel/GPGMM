name: win_dawn_dbg

on:
  workflow_dispatch:

jobs:

  job:

    runs-on: windows-2019

    steps:
    - name: Git config
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: Install depot_tools
      shell: cmd
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git ..\depot_tools
        set "PATH=%CD%\..\depot_tools;%PATH%"
        gclient

    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - uses: actions/checkout@v2
      with:
        ref: main
        path: base
        fetch-depth: 0

    - name: Sync code for main branch
      shell: cmd
      run: |
        set "PATH=%CD%\..\depot_tools;%PATH%"
        set "DEPOT_TOOLS_WIN_TOOLCHAIN=0"
        cd base
        copy scripts\dawn.gclient .gclient
        gclient sync

    - name: Generate project for main branch
      shell: cmd
      run: |
        set "PATH=%CD%\..\depot_tools;%PATH%"
        set "DEPOT_TOOLS_WIN_TOOLCHAIN=0"
        cd base
        gn gen out\Debug --args="is_debug=true dawn_enable_opengles=false gpgmm_enable_assert_on_warning=true"

    - name: Build for main branch
      shell: cmd
      run: |
        set "PATH=%CD%\..\depot_tools;%PATH%"
        set "DEPOT_TOOLS_WIN_TOOLCHAIN=0"
        cd base
        ninja -C out\Debug

    - name: Run dawn_end2end_tests
      shell: cmd
      continue-on-error: true
      run: |
        cd base
        out\Debug\dawn_end2end_tests.exe --backend=d3d12 --exclusive-device-type-preference=discrete,integrated,cpu --enable-backend-validation=partial --gtest_output=json:${{ github.workspace }}\..\baseline_end2end_tests.json

    - name: Clean baseline directory
      shell: cmd
      run: |
        rmdir /s /q base

    - uses: actions/checkout@v2
      with:
        path: test
        fetch-depth: 0

    - name: Sync code for main branch (with patch)
      shell: cmd
      run: |
        set "PATH=%CD%\..\depot_tools;%PATH%"
        set "DEPOT_TOOLS_WIN_TOOLCHAIN=0"
        cd test
        copy scripts\dawn.gclient .gclient
        gclient sync

    - name: Generate project for main branch (with patch)
      shell: cmd
      run: |
        set "PATH=%CD%\..\depot_tools;%PATH%"
        set "DEPOT_TOOLS_WIN_TOOLCHAIN=0"
        cd test
        gn gen out\Debug --args="is_debug=true dawn_enable_opengles=false gpgmm_enable_assert_on_warning=true"

    - name: Build for main branch (with patch)
      shell: cmd
      run: |
        set "PATH=%CD%\..\depot_tools;%PATH%"
        set "DEPOT_TOOLS_WIN_TOOLCHAIN=0"
        cd test
        ninja -C out\Debug

    - name: Run dawn_end2end_tests (with patch)
      shell: cmd
      continue-on-error: true
      run: |
        cd test
        out\Debug\dawn_end2end_tests.exe --backend=d3d12 --exclusive-device-type-preference=discrete,integrated,cpu --enable-backend-validation=partial --gtest_output=json:${{ github.workspace }}\..\test_end2end_tests.json || true

    - name: Regression check end2end tests
      run: |
        python test\scripts\regression_check.py ${{ github.workspace }}\..\baseline_end2end_tests.json ${{ github.workspace }}\..\test_end2end_tests.json

    # Organization has automatic merging disabled.
    # To re-enable, a custom "auto merge" workflow, linux_auto_merge.yaml is used.
    # However, automerge always triggers before checks are completed or "all green".
    # To workaround this issue, add a new trigger when the last job completes (this workflow).
    # The final set in the last job should generate a repository_dispatch event, to trigger automerge.
    # Note: REPO_ACCESS_TOKEN must be a PAT with `public_repo` (write-access) scope.
    - name: Trigger automerge
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        event-type: checks-complete
